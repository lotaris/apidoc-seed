mixin minConstraint(minimum, maximum)
	.constraint
		if minimum !== undefined || maximum !== undefined
			if minimum === maximum
				| must be #{minimum}
			else if minimum !== undefined && maximum !== undefined
				| between #{minimum} and #{maximum}
			else if minimum !== undefined
				| must be greater or equal to #{minimum}
			else
				| must be smaller than or equal to #{maximum}

mixin constraints(item)
	.constraints
		if item.required || item.repeat
			.constraint
				if item.required
					.badge.badge-required required
				if item.repeat
					.badge.badge-repeat repeat

		if item.minimum || item.maximum
			+minConstraint(item.minimum, item.maximum)

mixin namedParameters(namedParameters)
	.flex-table
		.flex-table-headers.no-left-border
			.flex-table-header Name
			.flex-table-header.center Type
			.flex-table-header.s3 Constraints
			.flex-table-header.s3 Description
			.flex-table-header.s3 Example
		each param in namedParameters
			.flex-table-row.no-left-border
				.flex-table-cell= param.displayName

				.flex-table-cell.center
					if param.type
						= param.type
					else
						| unknown

				.flex-table-cell.s3
					+constraints(param)

				.flex-table-cell.s3!= helpers.marked(param.description)
				.flex-table-cell.s3!= helpers.marked(param.example)

mixin namedParametersSection(uid, verb, sectionType, title, namedParameters)
	.method-section
		h3(data-toggle='collapse', data-target='##{uid}-#{verb}-#{sectionType}')= title
		.method-section-content
			.panel-collapse.collapse(id='#{uid}-#{verb}-#{sectionType}', class='#{helpers.toggleStateClass()}')
				+namedParameters(namedParameters)

mixin example(example, uid)
	.method-section
		h3(data-toggle='collapse', data-target='##{uid}') Example

		.method-section-content.panel-collapse.collapse.in(id='#{uid}')
			pre!= helpers.highlight(example)

mixin responsesSummary(responses)
	.method-section
		h3.no-action Summary
		.method-section-content
			.flex-table
				.flex-table-headers.no-left-border
					.flex-table-header.center Status Code
					.flex-table-header.s4 Description

				each response, key in responses
					.flex-table-row.no-left-border
						.flex-table-cell.center
							a(href='http://httpstatus.es/#{key}', target='_blank')=key
						.flex-table-cell.s4!= helpers.marked(response.description)

mixin resource(resource, level)
	.resource(class='resource-level-#{level}', id='#{resource.uniqueId}')
		h4.resource-title
			.resource-title-uri
				a.toggle(data-ref='##{resource.uniqueId} > .collapse-level-#{level}')
					span.parent=resource.parentUrl
					span.child=resource.relativeUri

			if resource.description
				.resource-title-description
					span= helpers.shorten(resource.description)
					if helpers.isShortable(resource.description)
						a.description-link(data-toggle='collapse', data-target='##{resource.uniqueId}-description') show full description.

			.resource-title-badges
				if resource.methods
					each method in resource.methods
						a(data-toggle='collapse', data-target='##{resource.uniqueId}-#{method.method}')
							span.badge(id='#{method.method}_#{resource.uniqueId}', class="badge-#{method.method}") #{method.method}

		if resource.description && helpers.isShortable(resource.description)
			.description.panel-collapse.collapse(id='#{resource.uniqueId}-description', class='#{helpers.toggleStateClass()}')!= helpers.marked(resource.description)

		if resource.methods
			each method in resource.methods
				.panel-collapse.collapse-method.collapse(id='#{resource.uniqueId}-#{method.method}', class="collapse-level-#{level}", data-ref='##{resource.uniqueId} > .collapse-level-#{level}', class='#{helpers.toggleStateClass()}')
					.method(class="method-#{method.method}")
						h4.method-title
							span.verb(class='badge-#{method.method}') #{method.method}
							| &nbsp;&nbsp;
							span.url #{resource.parentUrl}#{resource.relativeUri}

						.method-body
							.description!= helpers.marked(method.description)

							.method-section
								h3(data-toggle='collapse', href='##{resource.uniqueId}-#{method.method}-request') Request

								.method-section-content.panel-collapse.collapse.in(id='#{resource.uniqueId}-#{method.method}-request')
									if resource.allUriParameters && resource.allUriParameters.length > 0
										+namedParametersSection(resource.uniqueId, method.method, 'req-uri-params', 'URI Parameters', resource.allUriParameters)

									if method.queryParameters
										+namedParametersSection(resource.uniqueId, method.method, 'req-query-params', 'Query Parameters', method.queryParameters)
										//ul
										//	each param, key in method.queryParameters
										//				em
										//					if param.enum
										//						|  one of (#{param.enum})
										//					else
										//						|  (#{param.type})
										//					if param.default
										//						|  &mdash; Default: <code>#{param.default}</code>
										//

									if method.headers
										+namedParametersSection(resource.uniqueId, method.method, 'req-headers', 'Headers', method.headers)

									if method.body
										.method-section
											h3.no-action Body

											each b, key in method.body
												if b.schema
													+jsonSchema(b.schema, resource.uniqueId + '-' + method.method + '-request')
												if b.example
													+example(b.example, resource.uniqueId + '-' + method.method + '-reques-body-example')

												//if formParameters
												//	strong Form Parameters
												//	ul
												//		each param in formParameters
												//			li.markdown
												//				strong=key
												//				em
												//					if param.required
												//						|  required
												//					if param.enum
												//						|  one of (#{param.enum})
												//					else
												//						|  (#{param.type})
												//				| !{description}
												//				if param.example
												//					p: small
												//						strong Example:
												//						code!=param.example
												//				if param.schema
												//					p:small
												//						strong Schema:
												//						code!=param.schema

							if method.responses
								.method-section
									h3(data-toggle='collapse', href='##{resource.uniqueId}-#{method.method}-response') Response

									.method-section-content.panel-collapse.collapse(id='#{resource.uniqueId}-#{method.method}-response', class='#{helpers.toggleStateClass()}')
										+responsesSummary(method.responses)

										each response, key in method.responses
											if response.headers || response.body
												.method-section
													h3.no-action HTTP status code #{key}

													if response.headers
														+namedParametersSection(resource.uniqueId, method.method, 'res-headers', 'Headers', response.headers)

													if response.body
														.method-section
															h3.no-action Body

															each rb, contentType in response.body
																if rb && rb.schema
																	+jsonSchema(rb.schema, resource.uniqueId + '-' + method.method + '-' + key + '-response')

																if rb && rb.example
																	+example(rb.example, resource.uniqueId + '-' + method.method + '-response-' + key + '-body-example')


		//- recursively traverse sub-resources
		if resource.resources
			each subResource in resource.resources
				+resource(subResource, level + 1)
